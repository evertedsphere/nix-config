# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "rpool/local/root";
    fsType = "zfs";
  };

  fileSystems."/nix" = {
    device = "rpool/local/nix";
    fsType = "zfs";
  };

  fileSystems."/var/lib" = {
    device = "rpool/local/var/lib";
    fsType = "zfs";
  };

  fileSystems."/var/log" = {
    device = "rpool/local/var/log";
    fsType = "zfs";
  };

  fileSystems."/persist" = {
    device = "rpool/safe/persist";
    fsType = "zfs";
  };

  fileSystems."/home" = {
    device = "rpool/safe/home";
    fsType = "zfs";
  };

  fileSystems."/home/s/.local/share/atuin" = {
    device = "rpool/safe/atuin";
    fsType = "zfs";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/FCBD-96BA";
    fsType = "vfat";
  };

  fileSystems."/media" = {
    device = "/dev/disk/by-uuid/72208b0d-7912-4e59-a787-1317655e5c1b";
    fsType = "ext4";
    options = [ "nofail" ];
  };

  boot.initrd.luks.devices."media".device = "/dev/disk/by-uuid/a486f079-882b-494d-ba62-9561828db5e8";

  fileSystems."/data" = {
    device = "/dev/disk/by-uuid/534f89e4-9dbb-4051-8777-d86fc28c031f";
    fsType = "ext4";
    options = [ "nofail" ];
  };

  boot.initrd.luks.devices."data".device = "/dev/disk/by-uuid/aec61fb8-25a6-4899-b5e7-9fa46ad80635";

  # fileSystems."/data/inbox" = {
  #   device = "dpool/inbox";
  #   fsType = "zfs";
  # };

  # fileSystems."/data/models" = {
  #   device = "dpool/models";
  #   fsType = "zfs";
  # };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
